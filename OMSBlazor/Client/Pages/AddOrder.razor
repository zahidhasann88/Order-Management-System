@page "/order/add"
@page "/order/edit/{orderId:int}"
@using OMSBlazor.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Order</h1>
<hr />
<EditForm Model="@order" OnValidSubmit="SaveOrder">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Order Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.OrderName" />
        </div>
        <ValidationMessage For="@(() => order.OrderName)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">State</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.State" />
        </div>
        <ValidationMessage For="@(() => order.State)" />
    </div>
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">Product Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.ProductName" />
        </div>
        <ValidationMessage For="@(() => order.ProductName)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">Quantity</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.Quantity" />
        </div>
        <ValidationMessage For="@(() => order.Quantity)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">Type</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.Type" />
        </div>
        <ValidationMessage For="@(() => order.Type)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">Width</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.Width" />
        </div>
        <ValidationMessage For="@(() => order.Width)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">Height</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="order.Height" />
        </div>
        <ValidationMessage For="@(() => order.Height)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int orderId { get; set; }
    protected string Title = "Add";
    protected Order order = new();
    protected override async Task OnParametersSetAsync()
    {
        if (orderId != 0)
        {
            Title = "Edit";
            order = await Http.GetFromJsonAsync<Order>("api/Order/" + orderId);
        }
    }
    protected async Task SaveOrder()
    {
        if (order.OrderId != 0)
        {
            await Http.PutAsJsonAsync("api/Order", order);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Order", order);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchorderdetails");
    }
}
