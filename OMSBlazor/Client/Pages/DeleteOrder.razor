@page "/order/delete/{OrderId:int}"
@using OMSBlazor.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h2>Delete Order</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this order?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>OrderName</td>
                <td>@order.OrderName</td>
            </tr>
            <tr>
                <td>State</td>
                <td>@order.State</td>
            </tr>
            <tr>
                <td>ProductName</td>
                <td>@order.ProductName</td>
            </tr>
            <tr>
                <td>Quantity</td>
                <td>@order.Quantity</td>
            </tr>
            <tr>
                <td>Type</td>
                <td>@order.Type</td>
            </tr>
            <tr>
                <td>Width</td>
                <td>@order.Width</td>
            </tr>
            <tr>
                <td>Height</td>
                <td>@order.Height</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveUser(order.OrderId))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int orderId { get; set; }
    Order order = new Order();
    protected override async Task OnInitializedAsync()
    {
        order = await Http.GetFromJsonAsync<Order>("/api/User/" + Convert.ToInt32(orderId));
    }
    protected async Task RemoveUser(int orderID)
    {
        await Http.DeleteAsync("api/Order/" + orderID);
        NavigationManager.NavigateTo("/fetchorderdetails");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/fetchorderdetails");
    }
}
